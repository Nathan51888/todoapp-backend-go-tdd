services:
  backend:
    container_name: backend-c
    environment:
      - POSTGRES_HOST=database-c
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=todoapp
    build:
      context: .
      args:
        bin_to_build: httpserver
    ports:
      - 8080:8080
    networks:
      - web
      - metrics
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: .
          target: .

  database:
    container_name: database-c
    environment:
      - POSTGRES_HOST=database-c
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=todoapp
    image: postgres:17
    volumes:
      - ./testing/testdata/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - web
    healthcheck:
      test: pg_isready -U postgres -d todoapp
      interval: 1s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - metrics
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - metrics
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    attach: false

networks:
  metrics:
    driver: bridge
  web:
    driver: bridge
